{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "dn2d",
  "scopeName": "source.dn2d",
  "patterns": [
    { "include": "#comments" },
    { "include": "#strings" },
    { "include": "#directives" },
    { "include": "#keywords" },
    { "include": "#operators" },
    { "include": "#constants" },
    { "include": "#punctuation" },
    { "include": "#aggregates" },
    { "include": "#relations" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.number-sign.dn2d",
          "match": "#.*$"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.dn2d",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.dn2d",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "name": "keyword.control.directive.dn2d",
          "match": "\\b\\.(read|write|iterate)\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.dn2d",
          "match": "\\b(as|from|to|not)\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.dn2d",
          "match": ":-"
        },
        {
          "name": "keyword.operator.logical.dn2d",
          "match": "!"
        },
        {
          "name": "keyword.operator.comparison.dn2d",
          "match": "==|!=|<=|>=|<|>"
        },
        {
          "name": "keyword.operator.arithmetic.dn2d",
          "match": "\\+|-|\\*|/|%"
        }
      ]
    },
    "constants": {
      "patterns": [
        {
          "name": "constant.numeric.dn2d",
          "match": "\\b[0-9]+(\\.[0-9]+)?\\b"
        },
        {
          "name": "constant.language.boolean.dn2d",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.terminator.statement.dn2d",
          "match": "\\."
        },
        {
          "name": "punctuation.separator.comma.dn2d",
          "match": ","
        },
        {
          "name": "meta.brace.round.dn2d",
          "match": "\\(|\\)"
        },
        {
          "name": "meta.brace.curly.dn2d",
          "match": "\\{|\\}"
        }
      ]
    },
    "aggregates": {
      "patterns": [
        {
          "name": "support.function.aggregate.dn2d",
          "match": "\\b(count|sum|min|max|avg)\\b(?=\\s*\\()"
        }
      ]
    },
    "relations": {
      "patterns": [
        {
          "comment": "Matches PascalCase identifiers followed by a parenthesis, marking them as relations.",
          "name": "entity.name.function.relation.dn2d",
          "match": "\\b([A-Z][a-zA-Z0-9_]*)\\b(?=\\s*\\()"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.language.wildcard.dn2d",
          "match": "\\b_\\b"
        },
        {
          "name": "variable.other.DN2D",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}